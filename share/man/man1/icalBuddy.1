.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ICALBUDDY 1"
.TH ICALBUDDY 1 "2013-03-02" "1.8.8" "icalBuddy"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
icalBuddy \-\- query the OS X calendar database for items
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.IP "\fBicalBuddy\fR" 10
.IX Item "icalBuddy"
[options] \fIcommand\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBicalBuddy\fR queries the \s-1OS\s0 X calendar database for items and outputs them.
.PP
The options are as follows:
.IP "\fIcommand\fR" 12
.IX Item "command"
Specifies the general action to take. Possible values are:
.RS 12
.ie n .IP "\fB\fB""eventsToday""\fB\fR" 24
.el .IP "\fB\f(CBeventsToday\fB\fR" 24
.IX Item "eventsToday"
Print events occurring today
.ie n .IP "\fB\fB""eventsToday+NUM""\fB\fR" 24
.el .IP "\fB\f(CBeventsToday+NUM\fB\fR" 24
.IX Item "eventsToday+NUM"
Print events occurring between today and \s-1NUM\s0 days into the future, where \s-1NUM\s0 is an integer
.ie n .IP "\fB\fB""eventsNow""\fB\fR" 24
.el .IP "\fB\f(CBeventsNow\fB\fR" 24
.IX Item "eventsNow"
Print events occurring at present time
.ie n .IP "\fB\fB""eventsFrom:START to:END""\fB\fR" 24
.el .IP "\fB\f(CBeventsFrom:START to:END\fB\fR" 24
.IX Item "eventsFrom:START to:END"
Print events occurring between the two specified dates. The dates (\s-1START\s0 and \s-1END\s0) may be specified in a natural language form (such as \f(CW\*(C`tomorrow at noon\*(C'\fR or \f(CW\*(C`june 10 at 6 pm\*(C'\fR) or as relative dates (such as \f(CW\*(C`today+3\*(C'\fR or \f(CW\*(C`yesterday\-2\*(C'\fR) but the safest format is \f(CW\*(C`YYYY\-MM\-DD HH:MM:SS +HHMM\*(C'\fR (the \f(CW\*(C`+HHMM\*(C'\fR part at the end specifies the timezone offset in hours and minutes from \s-1GMT\s0, and it may have a plus or minus prefix)
.ie n .IP "\fB\fB""uncompletedTasks""\fB\fR" 24
.el .IP "\fB\f(CBuncompletedTasks\fB\fR" 24
.IX Item "uncompletedTasks"
Print uncompleted tasks
.ie n .IP "\fB\fB""undatedUncompletedTasks""\fB\fR" 24
.el .IP "\fB\f(CBundatedUncompletedTasks\fB\fR" 24
.IX Item "undatedUncompletedTasks"
Print uncompleted tasks that have no due date
.ie n .IP "\fB\fB""tasksDueBefore:DATE""\fB\fR" 24
.el .IP "\fB\f(CBtasksDueBefore:DATE\fB\fR" 24
.IX Item "tasksDueBefore:DATE"
Print uncompleted tasks that are due before the given date. \s-1DATE\s0 may be specified in a natural language form (such as \f(CW\*(C`tomorrow at noon\*(C'\fR or \f(CW\*(C`june 10 at 6 pm\*(C'\fR) or as a relative date (such as \f(CW\*(C`today+3\*(C'\fR or \f(CW\*(C`yesterday\-2\*(C'\fR) but the safest format is \f(CW\*(C`YYYY\-MM\-DD HH:MM:SS +HHMM\*(C'\fR (the \f(CW\*(C`+HHMM\*(C'\fR part at the end specifies the timezone offset in hours and minutes from \s-1GMT\s0, and it may have a plus or minus prefix)
.ie n .IP "\fB\fB""calendars""\fB\fR" 24
.el .IP "\fB\f(CBcalendars\fB\fR" 24
.IX Item "calendars"
Print a list of all the calendars
.ie n .IP "\fB\fB""strEncodings""\fB\fR" 24
.el .IP "\fB\f(CBstrEncodings\fB\fR" 24
.IX Item "strEncodings"
Print all the possible string encodings
.ie n .IP "\fB\fB""editConfig""\fB\fR" 24
.el .IP "\fB\f(CBeditConfig\fB\fR" 24
.IX Item "editConfig"
Open the configuration file for editing in a \s-1GUI\s0 editor application
.ie n .IP "\fB\fB""editConfigCLI""\fB\fR" 24
.el .IP "\fB\f(CBeditConfigCLI\fB\fR" 24
.IX Item "editConfigCLI"
Open the configuration file for editing in a command-line editor
.RE
.RS 12
.RE
.IP "\fB\-V\fR, \fB\-\-version\fR" 12
.IX Item "-V, --version"
Print version number and exit.
.IP "\fB\-u\fR, \fB\-\-checkForUpdates\fR" 12
.IX Item "-u, --checkForUpdates"
Check for updates to self. Also allows for automatic updating of self (with minimal user interaction, straight from the command line.)
.IP "\fB\-d\fR, \fB\-\-debug\fR" 12
.IX Item "-d, --debug"
Print diagnostic information into the standard error stream (for example, how input dates are interpreted).
.IP "\fB\-sc\fR, \fB\-\-separateByCalendar\fR" 12
.IX Item "-sc, --separateByCalendar"
Separate events/tasks in the output by calendar.
.IP "\fB\-sd\fR, \fB\-\-separateByDate\fR" 12
.IX Item "-sd, --separateByDate"
Separate events/tasks in the output by date.
.RS 12
.IP "\fB\-sed\fR, \fB\-\-showEmptyDates\fR" 8
.IX Item "-sed, --showEmptyDates"
Display sections for empty dates (i.e. dates that have no items) that fall within the specified range as well. Applies only if the \fB\-sd\fR argument is used.
.IP "\fB\-t\fR, \fB\-\-showTodaysSection\fR" 8
.IX Item "-t, --showTodaysSection"
Always display the section for the current date (even when it is empty). Applies only if the \fB\-sd\fR argument is used.
.RE
.RS 12
.RE
.IP "\fB\-sp\fR, \fB\-\-separateByPriority\fR" 12
.IX Item "-sp, --separateByPriority"
Separate tasks in the output by priority.
.IP "\fB\-f\fR, \fB\-\-formatOutput\fR" 12
.IX Item "-f, --formatOutput"
Use \s-1ANSI\s0 escape sequences to format the output and hopefully make it more readable.
.IP "\fB\-nc\fR, \fB\-\-noCalendarNames\fR" 12
.IX Item "-nc, --noCalendarNames"
Omit calendar names from the output. Does not apply if the \fB\-sc\fR argument is used.
.IP "\fB\-nrd\fR, \fB\-\-noRelativeDates\fR" 12
.IX Item "-nrd, --noRelativeDates"
Never use \*(L"natural language relative dates\*(R" (e.g. \*(L"today\*(R", \*(L"yesterday\*(R" or \*(L"day after tomorrow\*(R") instead of the default date format presentation (see the \fB\-df\fR argument).
.IP "\fB\-npn\fR, \fB\-\-noPropNames\fR" 12
.IX Item "-npn, --noPropNames"
Omit property names from the output (i.e. only show property values \*(-- e.g. \*(L"My house\*(R" instead of \*(L"location: My house\*(R").
.IP "\fB\-n\fR, \fB\-\-includeOnlyEventsFromNowOn\fR" 12
.IX Item "-n, --includeOnlyEventsFromNowOn"
If the \fIcommand\fR value \f(CW\*(C`eventsToday\*(C'\fR is used, only output events that occur between the current time and the end of the day (as opposed to events that occur between the start and end of the day, as by default.)
.IP "\fB\-na\fR, \fB\-\-maxNumAttendees\fR" 12
.IX Item "-na, --maxNumAttendees"
Maximum number of attendees to show for events.
.IP "\fB\-nnc\fR, \fB\-\-maxNumNoteChars\fR" 12
.IX Item "-nnc, --maxNumNoteChars"
Maximum number of characters to display from notes.
.IP "\fB\-uid\fR, \fB\-\-showUIDs\fR" 12
.IX Item "-uid, --showUIDs"
Display event/task UIDs (unique identifiers).
.IP "\fB\-eed\fR, \fB\-\-excludeEndDates\fR" 12
.IX Item "-eed, --excludeEndDates"
Do not output the dates/times of when events end.
.IP "\fB\-ea\fR, \fB\-\-excludeAllDayEvents\fR" 12
.IX Item "-ea, --excludeAllDayEvents"
Do not output all-day events.
.IP "\fB\-li\fR, \fB\-\-limitItems\fR \fInum\fR" 12
.IX Item "-li, --limitItems num"
Limit the number of printed items (events/tasks) in the output to a maximum of \fInum\fR items.
.IP "\fB\-std\fR, \fB\-\-sortTasksByDate\fR" 12
.IX Item "-std, --sortTasksByDate"
Sort tasks by their due dates, in descending order.
.IP "\fB\-stda\fR, \fB\-\-sortTasksByDateAscending\fR" 12
.IX Item "-stda, --sortTasksByDateAscending"
Sort tasks by their due dates, in ascending order.
.IP "\fB\-\-strEncoding\fR \fIencoding\fR" 12
.IX Item "--strEncoding encoding"
Use the specified string encoding for the output. Run the app once with the 'strEncodings' \fIcommand\fR value to see all the possible values you can use here.
.IP "\fB\-tf\fR, \fB\-\-timeFormat\fR \fIformat\fR" 12
.IX Item "-tf, --timeFormat format"
Format times included in the output based on the \fIformat\fR formatting string. See the \fBDate and Time Format Specifiers\fR section below for documentation on the syntax to use.
.IP "\fB\-df\fR, \fB\-\-dateFormat\fR \fIformat\fR" 12
.IX Item "-df, --dateFormat format"
Format dates included in the output based on the \fIformat\fR formatting string. See the \fBDate and Time Format Specifiers\fR section below for documentation on the syntax to use.
.IP "\fB\-po\fR, \fB\-\-propertyOrder\fR \fIvalue\fR" 12
.IX Item "-po, --propertyOrder value"
Print properties of events/tasks in the order specified by \fIvalue\fR, which must be a comma-separated list of property names. The allowed property names are: title, location, notes, attendees, url, datetime, priority.
.IP "\fB\-ps\fR, \fB\-\-propertySeparators\fR \fIvalue\fR" 12
.IX Item "-ps, --propertySeparators value"
Use the strings specified in \fIvalue\fR as the separators between item properties in the output. \fIvalue\fR must be a list of strings where each component is separated by an arbitrary character that is present also as the first and the last character in the value (that means you can use any character you'd like as the separator, as long as you also use it at the beginning and the end.) The components specified in \fIvalue\fR will be used in order, for each item, starting from the first printed property. If the number of printed properties for an item is bigger than the number of components in \fIvalue\fR, the last component is used as the separator for the remaining properties. For example, a value of \f(CW\*(C`|,\ |\ \-\ |\*(C'\fR would specify \f(CW\*(C`,\ \*(C'\fR as the separator between the first and the second property and \f(CW\*(C`\ \-\ \*(C'\fR as the separator between all the rest of the properties. The default is \f(CW\*(C`|\e\en\ \ \ \ |\*(C'\fR (i.e. use a newline and four spaces as the separator for all properties.)
.IP "\fB\-b\fR, \fB\-\-bullet\fR \fIvalue\fR" 12
.IX Item "-b, --bullet value"
Sets \fIvalue\fR as the string to be used as the bullet point in the output.
.IP "\fB\-ab\fR, \fB\-\-alertBullet\fR \fIvalue\fR" 12
.IX Item "-ab, --alertBullet value"
Sets \fIvalue\fR as the string to be used as the alert bullet point in the output.
.IP "\fB\-ss\fR, \fB\-\-sectionSeparator\fR \fIvalue\fR" 12
.IX Item "-ss, --sectionSeparator value"
Sets \fIvalue\fR as the string to be used as the section separator in the output. The default is a newline followed by a bunch of hyphens (\-).
.IP "\fB\-ic\fR, \fB\-\-includeCals\fR \fIvalue\fR" 12
.IX Item "-ic, --includeCals value"
Includes only items from specific calendars into the output. \fIvalue\fR must be a comma-separated list of calendar titles or UIDs (you can see UIDs (unique identifiers) for your calendars by using the 'calendars' \fIcommand\fR parameter.) The \fB\-ic\fR and \fB\-ec\fR parameters will be handled in the order of first include, then exclude.
.IP "\fB\-ec\fR, \fB\-\-excludeCals\fR \fIvalue\fR" 12
.IX Item "-ec, --excludeCals value"
Excludes items from specific calendars from the output. \fIvalue\fR must be a comma-separated list of calendar titles or UIDs (you can see UIDs (unique identifiers) for your calendars by using the 'calendars' \fIcommand\fR parameter.) The \fB\-ic\fR and \fB\-ec\fR parameters will be handled in the order of first include, then exclude.
.IP "\fB\-ict\fR, \fB\-\-includeCalTypes\fR \fIvalue\fR" 12
.IX Item "-ict, --includeCalTypes value"
Includes only items from specific types of calendars into the output. \fIvalue\fR must be a comma-separated list consisting of one or more of the following: birthday, caldav, exchange, imap, local, subscription, icloud (\*(L"icloud\*(R" is an alias for \*(L"caldav\*(R", and vice versa, because iCloud calendars on Lion are actually CalDAV calendars). The \fB\-ict\fR and \fB\-ect\fR parameters will be handled in the order of first include, then exclude, and are always applied before the \fB\-ic\fR and \fB\-ec\fR parameters.
.IP "\fB\-ect\fR, \fB\-\-excludeCalTypes\fR \fIvalue\fR" 12
.IX Item "-ect, --excludeCalTypes value"
Excludes items from specific types of calendars from the output. See \fB\-ict\fR for a list of allowed values. The \fB\-ict\fR and \fB\-ect\fR parameters will be handled in the order of first include, then exclude, and are always applied before the \fB\-ic\fR and \fB\-ec\fR parameters.
.IP "\fB\-iep\fR, \fB\-\-includeEventProps\fR \fIvalue\fR" 12
.IX Item "-iep, --includeEventProps value"
Includes only event properties specified by \fIvalue\fR into the output. \fIvalue\fR must be a comma-separated list of property names. Possible property names are: location, url, notes, attendees, datetime, title.
.IP "\fB\-eep\fR, \fB\-\-excludeEventProps\fR \fIvalue\fR" 12
.IX Item "-eep, --excludeEventProps value"
Excludes event properties specified by \fIvalue\fR from the output. \fIvalue\fR must be a comma-separated list of property names. See \fB\-iep\fR for a list of possible property names. A value of \f(CW\*(C`*\*(C'\fR will exclude all properties and make sure just the title is printed.
.IP "\fB\-itp\fR, \fB\-\-includeTaskProps\fR \fIvalue\fR" 12
.IX Item "-itp, --includeTaskProps value"
Includes only task properties specified by \fIvalue\fR into the output. \fIvalue\fR must be a comma-separated list of property names. Possible property names are: url, notes, datetime and priority.
.IP "\fB\-etp\fR, \fB\-\-excludeTaskProps\fR \fIvalue\fR" 12
.IX Item "-etp, --excludeTaskProps value"
Excludes task properties specified by \fIvalue\fR from the output. \fIvalue\fR must be a comma-separated list of property names. See \fB\-itp\fR for a list of possible property names. A value of \f(CW\*(C`*\*(C'\fR will exclude all properties and make sure just the title is printed.
.IP "\fB\-cf\fR, \fB\-\-configFile\fR \fIpath\fR" 12
.IX Item "-cf, --configFile path"
Use the configuration file located at \fIpath\fR instead of the default one (\fI~/.icalBuddyConfig.plist\fR). Pass in an empty string ("") to make icalBuddy ignore the configuration file completely.
.IP "\fB\-lf\fR, \fB\-\-localizationFile\fR \fIpath\fR" 12
.IX Item "-lf, --localizationFile path"
Use the localization file located at \fIpath\fR instead of the default one (\fI~/.icalBuddyLocalization.plist\fR).
.IP "\fB\-nnr\fR, \fB\-\-notesNewlineReplacement\fR \fIvalue\fR" 12
.IX Item "-nnr, --notesNewlineReplacement value"
Replaces newlines in values of the notes property with \fIvalue\fR.
.SH "DATE AND TIME FORMAT SPECIFIERS"
.IX Header "DATE AND TIME FORMAT SPECIFIERS"
Date format specifiers (used with the \fB\-df\fR (or \fB\-\-dateFormat\fR) argument:
.IP "\fB%%\fR" 12
.IX Item "%%"
A \f(CW\*(C`%\*(C'\fR character
.ie n .IP "\fB\fB%RW\fB\fR" 12
.el .IP "\fB\f(CB%RW\fB\fR" 12
.IX Item "%RW"
Relative week (e.g. \*(L"next week\*(R", or \*(L"10 weeks from now\*(R")
.ie n .IP "\fB\fB%RD\fB\fR" 12
.el .IP "\fB\f(CB%RD\fB\fR" 12
.IX Item "%RD"
Relative day (e.g. \*(L"yesterday\*(R", \*(L"today\*(R", or \*(L"day after tomorrow\*(R")
.ie n .IP "\fB\fB%a\fB\fR" 12
.el .IP "\fB\f(CB%a\fB\fR" 12
.IX Item "%a"
Abbreviated weekday name
.ie n .IP "\fB\fB%A\fB\fR" 12
.el .IP "\fB\f(CB%A\fB\fR" 12
.IX Item "%A"
Full weekday name
.ie n .IP "\fB\fB%b\fB\fR" 12
.el .IP "\fB\f(CB%b\fB\fR" 12
.IX Item "%b"
Abbreviated month name
.ie n .IP "\fB\fB%B\fB\fR" 12
.el .IP "\fB\f(CB%B\fB\fR" 12
.IX Item "%B"
Full month name
.ie n .IP "\fB\fB%d\fB\fR" 12
.el .IP "\fB\f(CB%d\fB\fR" 12
.IX Item "%d"
Day of the month as a decimal number (01\-31)
.ie n .IP "\fB\fB%e\fB\fR" 12
.el .IP "\fB\f(CB%e\fB\fR" 12
.IX Item "%e"
Same as \fB\f(CB%d\fB\fR but does not print the leading 0 for days 1 through 9 (unlike \fIstrftime\fR\|(3), does not print a leading space)
.ie n .IP "\fB\fB%j\fB\fR" 12
.el .IP "\fB\f(CB%j\fB\fR" 12
.IX Item "%j"
Day of the year as a decimal number (001\-366)
.ie n .IP "\fB\fB%m\fB\fR" 12
.el .IP "\fB\f(CB%m\fB\fR" 12
.IX Item "%m"
Month as a decimal number (01\-12)
.ie n .IP "\fB\fB%w\fB\fR" 12
.el .IP "\fB\f(CB%w\fB\fR" 12
.IX Item "%w"
Weekday as a decimal number (0\-6), where Sunday is 0
.ie n .IP "\fB\fB%y\fB\fR" 12
.el .IP "\fB\f(CB%y\fB\fR" 12
.IX Item "%y"
Year without century (00\-99)
.ie n .IP "\fB\fB%Y\fB\fR" 12
.el .IP "\fB\f(CB%Y\fB\fR" 12
.IX Item "%Y"
Year with century (such as 1990)
.ie n .IP "\fB\fB%x\fB\fR" 12
.el .IP "\fB\f(CB%x\fB\fR" 12
.IX Item "%x"
Date using the date representation for the locale, including the time zone (produces different results from \fIstrftime\fR\|(3))
.ie n .IP "\fB\fB%c\fB\fR" 12
.el .IP "\fB\f(CB%c\fB\fR" 12
.IX Item "%c"
Shorthand for \f(CW\*(C`%X\ %x\*(C'\fR, the locale format for date and time
.PP
Time format specifiers (used with the \fB\-tf\fR (or \fB\-\-timeFormat\fR) argument:
.IP "\fB%%\fR" 12
.IX Item "%%"
A \f(CW\*(C`%\*(C'\fR character
.ie n .IP "\fB\fB%F\fB\fR" 12
.el .IP "\fB\f(CB%F\fB\fR" 12
.IX Item "%F"
Milliseconds as a decimal number (000\-999)
.ie n .IP "\fB\fB%H\fB\fR" 12
.el .IP "\fB\f(CB%H\fB\fR" 12
.IX Item "%H"
Hour based on a 24\-hour clock as a decimal number (00\-23)
.ie n .IP "\fB\fB%I\fB\fR" 12
.el .IP "\fB\f(CB%I\fB\fR" 12
.IX Item "%I"
Hour based on a 12\-hour clock as a decimal number (01\-12)
.ie n .IP "\fB\fB%M\fB\fR" 12
.el .IP "\fB\f(CB%M\fB\fR" 12
.IX Item "%M"
Minute as a decimal number (00\-59)
.ie n .IP "\fB\fB%p\fB\fR" 12
.el .IP "\fB\f(CB%p\fB\fR" 12
.IX Item "%p"
\&\s-1AM/PM\s0 designation for the locale
.ie n .IP "\fB\fB%S\fB\fR" 12
.el .IP "\fB\f(CB%S\fB\fR" 12
.IX Item "%S"
Second as a decimal number (00\-59)
.ie n .IP "\fB\fB%Z\fB\fR" 12
.el .IP "\fB\f(CB%Z\fB\fR" 12
.IX Item "%Z"
Time zone name (such as Pacific Daylight Time; produces different results from \fIstrftime\fR\|(3))
.ie n .IP "\fB\fB%z\fB\fR" 12
.el .IP "\fB\f(CB%z\fB\fR" 12
.IX Item "%z"
Time zone offset in hours and minutes from \s-1GMT\s0 (\s-1HHMM\s0)
.ie n .IP "\fB\fB%X\fB\fR" 12
.el .IP "\fB\f(CB%X\fB\fR" 12
.IX Item "%X"
Time using the time representation for the locale (produces different results from \fIstrftime\fR\|(3))
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 1
\&        $ icalBuddy \-sc uncompletedTasks
.Ve
.PP
Outputs all uncompleted tasks, separated by calendar
.PP
.Vb 1
\&        $ icalBuddy \-sd \-ic Work,Home \-ec WeekNumbers eventsToday
.Ve
.PP
Outputs all events occurring today from all calendars where the title or \s-1UID\s0 matches 'Work' or 'Home' and the title or \s-1UID\s0 does not match 'WeekNumbers', separated by date
.PP
.Vb 1
\&        $ icalBuddy eventsFrom:"2009\-01\-01 00:00:00 +02:00" to:"2009\-01\-31 23:59:59 +02:00"
.Ve
.PP
Outputs all events occurring between the first of january, 2009 and the 31st of january, 2009 (using the timezone \s-1GMT+02:00\s0)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIicalBuddyConfig\fR\|(1), \fIicalBuddyLocalization\fR\|(1)
.SH "AUTHORS"
.IX Header "AUTHORS"
This man page has been written by Ali Rantakari (http://hasseg.org)
